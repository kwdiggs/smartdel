#!/bin/bash

# create recycle bin if not already created
recbin='smartdel_recycle'
if [ ! -d ~/$recbin ]
then
	dir=$PWD
	cd ~
	mkdir $recbin
	cd $dir
fi

log () {
	tuple="$1 $PWD"
	if grep -Fxq "$tuple" ~/$recbin/$tuple
	then
    		echo "okay!"
	else
    		echo "too late!"
		echo "$tuple" >> ~/$recbin/.table.txt
	fi
}

# DRY functions to move files to and from our recycle bin
delete () {

	# variables for concatenation
	filename=$1
	var='d' # d for deleted

	# append char to ensure uniqueness
	if [ -e ~/$recbin/$filename ]
	then
		while [ -e ~/$recbin/$filename ]
		do
			filename=$filename$var
		done

		echo "smartdel: this file already exists, but not to worry, moved with new name '$filename'"
		mv $1 $filename
	fi

	# move file
       	log $filename
	mv $filename ~/$recbin/
}

restore () {

	# variables for concatenation
        filename=$1
        var='r' # r for restored

        # append char to ensure uniqueness
        if [ -e ./$filename ]
        then
                while [ -e ./$filename ]
                do
                        filename=$filename$var
                done

                echo "smartdel: this file already exists, but not to worry, moved with new name '$filename'"
                mv ~/$recbin/$1 ~/$recbin/$filename
        fi

        # move file
	mv ~/$rebin/$filename .
}

# paramaterize the option, if it exists. Else, this loop will be skipped
while getopts ":d:r:o:" opt;
do
	# in the case of wildcards, shift all filenames down to $2
	while [ -n "$2" ]
	do
		case $opt in
               		d) delete $2 ;;
               		r) restore $2 ;;
			o) restore $2 ;;
               		\?) echo "invalid command: -$OPTARG" ;;
       		esac
		shift # shift down command vars by 1
	done
	exit # exit if getops found an option
done

# if there is no specified option, delete by default
while [ -n "$1" ]
do
	delete $1
	shift
done






